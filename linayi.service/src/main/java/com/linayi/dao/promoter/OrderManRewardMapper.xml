<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linayi.dao.promoter.OrderManRewardMapper">
  <resultMap id="BaseResultMap" type="com.linayi.entity.promoter.OrderManReward">
    <id column="order_man_reward_id" jdbcType="INTEGER" property="orderManRewardId" />
    <result column="order_man_id" jdbcType="INTEGER" property="orderManId" />
    <result column="reward_rule_id" jdbcType="INTEGER" property="rewardRuleId" />
    <result column="actual_amount" jdbcType="DECIMAL" property="actualAmount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="settlement_time" jdbcType="TIMESTAMP" property="settlementTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    order_man_reward_id, order_man_id, reward_rule_id, actual_amount, `status`, settlement_time, 
    finish_time, create_time
  </sql>
  <select id="selectByExample" parameterType="com.linayi.entity.promoter.OrderManRewardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order_man_reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_man_reward
    where order_man_reward_id = #{orderManRewardId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_man_reward
    where order_man_reward_id = #{orderManRewardId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.linayi.entity.promoter.OrderManRewardExample">
    delete from order_man_reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="order_man_reward_id" keyProperty="orderManRewardId" parameterType="com.linayi.entity.promoter.OrderManReward" useGeneratedKeys="true">
    insert into order_man_reward (order_man_id, reward_rule_id, actual_amount, 
      `status`, settlement_time, finish_time, 
      create_time)
    values (#{orderManId,jdbcType=INTEGER}, #{rewardRuleId,jdbcType=INTEGER}, #{actualAmount,jdbcType=DECIMAL}, 
      #{status,jdbcType=VARCHAR}, #{settlementTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="order_man_reward_id" keyProperty="orderManRewardId" parameterType="com.linayi.entity.promoter.OrderManReward" useGeneratedKeys="true">
    insert into order_man_reward
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderManId != null">
        order_man_id,
      </if>
      <if test="rewardRuleId != null">
        reward_rule_id,
      </if>
      <if test="actualAmount != null">
        actual_amount,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="settlementTime != null">
        settlement_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderManId != null">
        #{orderManId,jdbcType=INTEGER},
      </if>
      <if test="rewardRuleId != null">
        #{rewardRuleId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="settlementTime != null">
        #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.linayi.entity.promoter.OrderManRewardExample" resultType="java.lang.Long">
    select count(*) from order_man_reward
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order_man_reward
    <set>
      <if test="record.orderManRewardId != null">
        order_man_reward_id = #{record.orderManRewardId,jdbcType=INTEGER},
      </if>
      <if test="record.orderManId != null">
        order_man_id = #{record.orderManId,jdbcType=INTEGER},
      </if>
      <if test="record.rewardRuleId != null">
        reward_rule_id = #{record.rewardRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.actualAmount != null">
        actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.settlementTime != null">
        settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.finishTime != null">
        finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order_man_reward
    set order_man_reward_id = #{record.orderManRewardId,jdbcType=INTEGER},
      order_man_id = #{record.orderManId,jdbcType=INTEGER},
      reward_rule_id = #{record.rewardRuleId,jdbcType=INTEGER},
      actual_amount = #{record.actualAmount,jdbcType=DECIMAL},
      `status` = #{record.status,jdbcType=VARCHAR},
      settlement_time = #{record.settlementTime,jdbcType=TIMESTAMP},
      finish_time = #{record.finishTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.linayi.entity.promoter.OrderManReward">
    update order_man_reward
    <set>
      <if test="orderManId != null">
        order_man_id = #{orderManId,jdbcType=INTEGER},
      </if>
      <if test="rewardRuleId != null">
        reward_rule_id = #{rewardRuleId,jdbcType=INTEGER},
      </if>
      <if test="actualAmount != null">
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="settlementTime != null">
        settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_man_reward_id = #{orderManRewardId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linayi.entity.promoter.OrderManReward">
    update order_man_reward
    set order_man_id = #{orderManId,jdbcType=INTEGER},
      reward_rule_id = #{rewardRuleId,jdbcType=INTEGER},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      `status` = #{status,jdbcType=VARCHAR},
      settlement_time = #{settlementTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where order_man_reward_id = #{orderManRewardId,jdbcType=INTEGER}
  </update>
</mapper>