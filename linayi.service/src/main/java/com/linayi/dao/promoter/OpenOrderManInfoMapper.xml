<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linayi.dao.promoter.OpenOrderManInfoMapper">
<sql id="base_column">
  open_order_man_info_id, promoter_id, order_man_id, identity, order_man_level, start_time, end_time, update_time, create_time
</sql>
  <insert id="insert" parameterType="com.linayi.entity.promoter.OpenOrderManInfo" useGeneratedKeys="true" keyProperty="openOrderManInfoId">
    insert into open_order_man_info (open_order_man_info_id, promoter_id, order_man_id, 
      identity, order_man_level, start_time, sales_id,
      end_time, update_time, create_time
      )
    values (#{openOrderManInfoId,jdbcType=INTEGER}, #{promoterId,jdbcType=INTEGER}, #{orderManId,jdbcType=INTEGER}, 
      #{identity,jdbcType=VARCHAR}, #{orderManLevel,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, #{salesId,jdbcType=INTEGER},
      #{endTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <select id="getOpenOrderManInfoById" resultType="com.linayi.entity.promoter.OpenOrderManInfo">
    select <include refid="base_column"/> from open_order_man_info
    where open_order_man_info_id = #{openOrderManInfoId}
  </select>
    <select id="getOpenOrderManInfoByEndTime" resultType="com.linayi.entity.promoter.OpenOrderManInfo">
        select <include refid="base_column"/> from open_order_man_info
        where order_man_id = #{orderManId} and end_time &gt;  now()
    </select>


  <select id="getOpenOrderManInfoList" resultType="com.linayi.entity.promoter.PromoterOrderMan">
    SELECT
        oomi1.order_man_id,
        oomi1.start_time,
        oomi1.end_time,
        oomi1.promoter_id,
        oomi1.create_time,
        oomi1.order_man_id,
        IFNULL(COUNT(o.orders_id), 0) numberOfOrders,
        IFNULL(sum(IF(o.amount&gt;=10000,o.amount-1000,0)),0) personalSales,
        IFNULL(
        (SUM(o.amount)),
        0
        ) totalSum,
        (
          SELECT
               COUNT(open_member_info_id)
          FROM
               open_member_info
          WHERE
              start_time &lt; NOW()
              AND end_time &gt; NOW()
              AND order_man_id = oomi1.order_man_id
          ) numberOfMembers,
        u.mobile,
        u.head_image headImage,
        u.nickname
    FROM
        open_order_man_info oomi1
        LEFT JOIN orders o ON oomi1.order_man_id = o.order_man_id AND (o.community_status='PROCURE_FINISHED' or o.community_status='DELIVER_FINISHED')
          <if test="date!=null and date=='MONTH'">
              AND  o.create_time &gt; timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
          </if>
        LEFT JOIN `user` u ON u.user_id = oomi1.order_man_id
    WHERE
             oomi1.start_time &lt; NOW()
         AND oomi1.end_time &gt; NOW()
        <if test="date==null  or date!='MONTH'">
         AND   (oomi1.sales_id = #{userId} or oomi1.order_man_id=#{userId})
        </if>
        <if test="date!=null and date=='MONTH'">
         AND  oomi1.create_time &gt; timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
         AND  (oomi1.sales_id = #{userId} or oomi1.order_man_id=#{userId})
        </if>
    GROUP BY
        oomi1.open_order_man_info_id
    ORDER BY oomi1.order_man_id &lt;&gt; #{userId},oomi1.open_order_man_info_id DESC
  </select>

  <select id="getOpenOrderManInfoByOrderManId" resultType="com.linayi.entity.promoter.OpenOrderManInfo">
    SELECT <include refid="base_column"/> from open_order_man_info
    where order_man_id = #{orderManId}
  </select>

    <!--首页个人订单量/个人成交额/个人销售服务额-->
    <select id="getPersonalOrder" resultType="com.linayi.entity.promoter.PromoterOrderMan">
      SELECT
            count(o.orders_id) numberOfOrders,
            IFNULL(sum(o.amount),0) totalSum,
            IFNULL(sum(IF(o.amount&gt;=10000,o.amount-1000,0)),0) personalSales
       FROM
            receive_address ra
            JOIN orders o ON o.receive_address_id = ra.receive_address_id
            AND (o.community_status='PROCURE_FINISHED' OR o.community_status='DELIVER_FINISHED')
            AND o.create_time >  timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
      WHERE
            (ra.STATUS = 'NORMAL'AND ra.address_type = 'CUSTOMER'AND ra.user_id = #{userId})
            OR o.order_man_id=#{userId}
    </select>

    <!--代顾客下单订单量/个人成交额/个人销售服务额-->
    <select id="getPersonalOrderProfit" resultType="com.linayi.entity.promoter.PromoterOrderMan">
      SELECT
            count(DISTINCT ra.receive_address_id) numberOfUser,
            count(o.orders_id) numberOfOrders,
            IFNULL(sum(o.amount),0) totalSum,
            IFNULL(sum(IF(o.amount&gt;=10000,o.amount-1000,0)),0) personalSales
       FROM
            receive_address ra LEFT
            JOIN orders o ON o.receive_address_id = ra.receive_address_id
            AND (o.community_status='PROCURE_FINISHED' OR o.community_status='DELIVER_FINISHED')
            <if test="date!=null and date=='MONTH'">
                AND o.create_time &gt;  timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
            </if>
      WHERE
            ra.STATUS = 'NORMAL' AND ra.address_type = 'CUSTOMER' AND ra.user_id = #{userId}
            <if test="date!=null and date=='MONTH'">
                AND ra.create_time &gt; timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
            </if>
    </select>


    <!--获取下级会员列表-->
        <select id="getMemberData" resultType="com.linayi.entity.promoter.PromoterOrderMan">
            SELECT
                  omi.create_time openMemberTime,
                  omi.open_member_info_id,
                  omi.user_id,
                  u.mobile,
                  u.head_image headImage,
                  u.nickname
            FROM
                 open_member_info omi LEFT
                 JOIN user u ON u.user_id = omi.user_id
            WHERE
                 omi.order_man_id = #{userId}
                 AND  omi.end_time &gt; now()
                 <if test="date!=null and date=='MONTH'">
                 AND  omi.create_time &gt; timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
                 </if>
            GROUP BY
                 omi.open_member_info_id
            ORDER BY
                 omi.open_member_info_id DESC
    </select>

    <!--根据家庭服务师id获取订单数据-->
    <select id="getOrderManData" resultType="com.linayi.entity.promoter.PromoterOrderMan">
        SELECT
              IFNULL(count(orders_id),0) numberOfOrders,
              IFNULL(sum(amount),0) totalSum,
              IFNULL(sum(IF(amount&gt;=10000,amount-1000,0)),0) personalSales
        FROM
              orders
        WHERE
        (community_status='PROCURE_FINISHED' OR community_status='DELIVER_FINISHED')
         <if test="orderManId!=null and orderManId!=''">
            AND    order_man_id = #{orderManId}
         </if>

        <if test="userId!=null and userId!=''">
            AND user_id = #{userId}
        </if>
        <if test="receiveAddressId!=null and receiveAddressId!=''">
            AND receive_address_id = #{receiveAddressId}
        </if>
        <if test="date!=null and date=='MONTH'">
            AND create_time &gt; timestamp(date_add(curdate(), interval - day(curdate()) + 1 day))
        </if>
    </select>

    <select id="selectByOrderManId" resultType="com.linayi.entity.promoter.OpenOrderManInfo">
        select <include refid="base_column"/> from open_order_man_info
        where order_man_id = #{orderManId}
    </select>

    <update id="updateOpenOrderManInfo" parameterType="com.linayi.entity.promoter.OpenOrderManInfo">
        update open_order_man_info
        <set>
            <if test="promoterId != null">
                promoter_id = #{promoterId,jdbcType=INTEGER},
            </if>
            <if test="orderManId != null">
                order_man_id = #{orderManId,jdbcType=INTEGER},
            </if>
            <if test="salesId != null">
                sales_id = #{salesId,jdbcType=INTEGER},
            </if>
            <if test="identity != null">
                identity = #{identity,jdbcType=VARCHAR},
            </if>
            <if test="orderManLevel != null">
                order_man_level = #{orderManLevel,jdbcType=VARCHAR},
            </if>
            <if test="endTime != null">
                end_time = #{endTime,jdbcType=TIMESTAMP},
            </if>
            <if test="startTime != null">
                start_time = #{startTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
        </set>
        where open_order_man_info_id = #{openOrderManInfoId,jdbcType=INTEGER}
    </update>

    <!--会员进入的订单列表-->
    <select id="getMemberOrderList" resultMap="BaseResultMapList">
        SELECT
              gs.goods_sku_id,
              gs.full_name goodsName,
              gs.image,
              og.max_price,
              og.price,
              round(((og.max_price- og.price)/og.price*100),2) spreadRate,
              og.quantity,
              og.supermarket_id,
              og.max_supermarket_id,
              (og.price *og.quantity) totalPrice,
              o.amount payPrice,
              o.quantity  totalQuantity,
              o.orders_id
         FROM
              orders o JOIN orders_goods og ON o.orders_id = og.orders_id JOIN goods_sku gs ON  gs.goods_sku_id=og.goods_sku_id
         WHERE
           (o.community_status='PROCURE_FINISHED' OR o.community_status='DELIVER_FINISHED')
            <if test="orderManId!=null and orderManId!=''">
               and  o.order_man_id = #{orderManId}
            </if>
            <if test="memberId!=null and memberId!=''">
              and o.user_id = #{memberId}
            </if>
            <if test="receiveAddressId!=null and receiveAddressId!=''">
              AND o.receive_address_id = #{receiveAddressId}
            </if>
            ORDER BY o.orders_id DESC
    </select>

    <resultMap id="BaseResultMapList" type="com.linayi.entity.order.Orders" >
        <id column="orders_id" property="ordersId" jdbcType="BIGINT" />
        <result column="orders_id" property="ordersId" />
        <result column="payPrice" property="payPrice" />
        <result column="totalQuantity" property="totalQuantity" />
        <collection property="ordersGoodsList"  ofType="com.linayi.entity.order.OrdersGoods">
            <id column="orders_goods_id" property="ordersGoodsId"  />
            <result column="goods_sku_id" property="goodsSkuId" />
            <result column="goodsName" property="goodsName" />
            <result column="image" property="image" />
            <result column="max_price" property="maxPrice" />
            <result column="price" property="price" />
            <result column="spreadRate" property="spreadRate" />
            <result column="quantity" property="quantity" />
            <result column="supermarket_id" property="supermarketId" />
            <result column="max_supermarket_id" property="maxSupermarketId" />
            <result column="totalPrice" property="totalPrice" />
        </collection>
    </resultMap>

 <!--   &lt;!&ndash;获取家庭服务师列表(后台用)&ndash;&gt;
    <select id="getOrderManList">
      SELECT



    </select>-->
</mapper>